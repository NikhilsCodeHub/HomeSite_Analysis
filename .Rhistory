dtrain <- read.csv("train.csv", stringsAsFactors = TRUE, na.strings = c(""," ", "NaN", "NA", "Inf"))
dim(dtrain)
na.cols <- sapply(dtrain[,1:dim(dtrain)[2]],anyNA)
na.cols <- data.frame(ColNames=rownames(data.frame(na.cols)),ColNA = na.cols)
na.cols[na.cols$ColNA,"ColNames"]
na.cols <- sapply(dtrain[,1:dim(dtrain)[2]],anyNA)
na.cols <- data.frame(ColNames=rownames(data.frame(na.cols)),ColNA = na.cols)
na.cols[na.cols$ColNA,]
levels(dtrain$PersonalField7)
table(dtrain$GeographicField63, useNA = "ifany")
library(randomForest)
library(caret)
library(dplyr)
dtrain <- tbl_df(dtrain)
?filter
select(dtrain, starts_with("GeographicField"))
table(dtrain$GeographicField63, useNA = "ifany")
table(dtrain$PersonalField7, useNA = "ifany")
table(dtrain$PersonalField84, useNA = "ifany")
colnames(dtrain)
df_personal <- select(dtrain, starts_with("PersonalField"))
df_personal
install.packages("amelia")
Y
install.packages("Amelia")
library(Amelia)
version
a.out <- amelia(dtrain, m= 5)
a.out <- amelia(dtrain, m= 5, ord=PersonalField7)
a.out <- amelia(dtrain, m= 5, ord="PersonalField7")
anyNA(df_personal)
anyNA(df_personal[,-PersonalField84])
anyNA(df_personal[,-PersonalField84])
df_personal <- select(dtrain, starts_with("PersonalField"))
df_personal$PersonalField84
table(df_personal$PersonalField84)
table(df_personal$PersonalField84, useNA = "ifany")
df_personal$PersonalField84[is.na(df_personal$PersonalField84)] <- "0"
table(df_personal$PersonalField84, useNA = "ifany")
levels(df_personal$PersonalField84)
str(df_personal$PersonalField84)
df_personal$PersonalField84 <- factor(df_personal$PersonalField84)
levels(df_personal$PersonalField84)
levels(dtrain$PersonalField7)
table(df_personal$PersonalField7, useNA = "ifany")
dim(df_personal[!is.na(df_personal$PersonalField7),])
dim(df_personal[is.na(df_personal$PersonalField7),])
train_df_personal <- df_personal[!is.na(df_personal$PersonalField7),]
fit <- randomForest(as.factor(train_df_personal) ~ ., train_df_personal, ntrees = 1000)
select(dtrain, starts_with("PersonalField")) %>>% table
select(dtrain, starts_with("PersonalField")) %>% table
table(select(dtrain, starts_with("PersonalField")))
str(df_personal)
substr(x = df_personal$PersonalField16,start = 0,stop = 1)
table(substr(x = df_personal$PersonalField16,start = 0,stop = 1))
df_personal$PersonalField16A <- substr(x = df_personal$PersonalField16,start = 0,stop = 1))
df_personal$PersonalField16A <- substr(x = df_personal$PersonalField16,start = 0,stop = 1)
head(df_personal$PersonalField16A)
head(df_personal$PersonalField16)
table(substr(x = df_personal$PersonalField16,start = 1,stop = 2))
table(substr(x = df_personal$PersonalField16,start = 2,stop = 2))
table(substr(x = df_personal$PersonalField16,start = 1,stop = 1))
table(substr(x = df_personal$PersonalField16,start = 2,stop = 2))
df_personal$PersonalField16B <- substr(x = df_personal$PersonalField16,start = 2,stop = 2))
df_personal$PersonalField16B <- substr(x = df_personal$PersonalField16,start = 2,stop = 2)
str(df_personal$PersonalField16A)
str(df_personal$PersonalField16B)
df_personal$PersonalField16A <- substr(x = df_personal$PersonalField16,start = 1,stop = 1)
df_personal$PersonalField16B <- substr(x = df_personal$PersonalField16,start = 2,stop = 2)
df_personal[,c_col] <- substr(x = df_personal$PersonalField16,start = 1,stop = 1)
c_col = "PersonalField16A"
df_personal[,c_col] <- substr(x = df_personal$PersonalField16,start = 1,stop = 1)
c_col = "PersonalField16A"
df_personal[,c_col] <- substr(x = df_personal$PersonalField16,start = 1,stop = 1)
splitColumn <- function(dframe, c_col){
dframe[,paste(c_col, "A", sep = "")] <- substr(x = dframe$c_col,start = 1,stop = 1)
dframe[,paste(c_col, "B", sep = "")] <- substr(x = dframe$c_col,start = 2,stop = 2)
return(dframe)
}
df_personal <- splitColumn(df_personal, PersonalField17)
c_col = "temp"
df_personal[,paste(c_col, "A", sep = "")] <- substr(x = df_personal$PersonalField16,start = 1,stop = 1)
colnames(ddf_personal)
colnames(df_personal)
df_personal$tempA
splitColumn <- function(dframe, c_col){
dframe[,paste(c_col, "A", sep = "")] <- substr(x = dframe[,c_col],start = 1,stop = 1)
dframe[,paste(c_col, "B", sep = "")] <- substr(x = dframe[,c_col],start = 2,stop = 2)
return(dframe)
}
df_personal <- splitColumn(df_personal, "PersonalField17")
colnames(ddf_personal)
colnames(df_personal)
df_personal$PersonalField17A
df_personal$PersonalField17B
c_col = "PersonalField16"
df_personal$PersonalField16A <- substr(x = df_personal[,c_col],start = 1,stop = 1)
df_personal <- splitColumn(df_personal, "PersonalField17")
table(df_personal$PersonalField17A)
table(df_personal$PersonalField17B)
df_personal <- splitColumn(df_personal, "PersonalField18")
table(df_personal$PersonalField18A)
table(df_personal$PersonalField18)
df_personal <- splitColumn(df_personal, "PersonalField18")
table(df_personal$PersonalField18A)
splitColumn(df_personal, "PersonalField18")
splitColumn <- function(dframe, c_col){
#dframe[,paste(c_col, "A", sep = "")] <- substr(x = dframe[,c_col],start = 1,stop = 1)
#dframe[,paste(c_col, "B", sep = "")] <- substr(x = dframe[,c_col],start = 2,stop = 2)
return(substr(x = dframe[,c_col],start = 1,stop = 1))
}
splitColumn(df_personal, "PersonalField18")
splitColumn <- function(dframe, c_col){
#dframe[,paste(c_col, "A", sep = "")] <- substr(x = dframe[,c_col],start = 1,stop = 1)
#dframe[,paste(c_col, "B", sep = "")] <- substr(x = dframe[,c_col],start = 2,stop = 2)
return(substr(x = dframe[,c_col],start = 1,stop = 2))
}
splitColumn(df_personal, "PersonalField18")
splitColumn <- function(dframe, c_col){
#dframe[,paste(c_col, "A", sep = "")] <- substr(x = dframe[,c_col],start = 1,stop = 1)
#dframe[,paste(c_col, "B", sep = "")] <- substr(x = dframe[,c_col],start = 2,stop = 2)
return(c_col)
}
splitColumn(df_personal, "PersonalField18")
splitColumn <- function(dframe, c_col){
#dframe[,paste(c_col, "A", sep = "")] <- substr(x = dframe[,c_col],start = 1,stop = 1)
#dframe[,paste(c_col, "B", sep = "")] <- substr(x = dframe[,c_col],start = 2,stop = 2)
return(head(dframe$c_col))
}
splitColumn(df_personal, "PersonalField18")
splitColumn <- function(dframe, c_col){
#dframe[,paste(c_col, "A", sep = "")] <- substr(x = dframe[,c_col],start = 1,stop = 1)
#dframe[,paste(c_col, "B", sep = "")] <- substr(x = dframe[,c_col],start = 2,stop = 2)
return(head(dframe[,c_col]))
}
splitColumn(df_personal, "PersonalField18")
splitColumn <- function(dframe, c_col){
#dframe[,paste(c_col, "A", sep = "")] <- substr(x = dframe[,c_col],start = 1,stop = 1)
#dframe[,paste(c_col, "B", sep = "")] <- substr(x = dframe[,c_col],start = 2,stop = 2)
return(substr(dframe[,c_col],1,1))
}
splitColumn(df_personal, "PersonalField18")
df_personal$PersonalField16A <- substr(x = df_personal$PersonalField16,start = 1,stop = 1)
df_personal$PersonalField16B <- substr(x = df_personal$PersonalField16,start = 2,stop = 2)
df_personal$PersonalField17A <- substr(x = df_personal$PersonalField17,start = 1,stop = 1)
df_personal$PersonalField17B <- substr(x = df_personal$PersonalField17,start = 2,stop = 2)
df_personal$PersonalField18A <- substr(x = df_personal$PersonalField18,start = 1,stop = 1)
df_personal$PersonalField18B <- substr(x = df_personal$PersonalField18,start = 2,stop = 2)
df_personal$PersonalField19A <- substr(x = df_personal$PersonalField19,start = 1,stop = 1)
df_personal$PersonalField19B <- substr(x = df_personal$PersonalField19,start = 2,stop = 2)
table(df_personal$PersonalField84)
levels(df_personal$PersonalField84)
table(df_personal$PersonalField7 , useNA = "ifany")
colnames(df_personal)
train_df_personal <- df_personal[!is.na(df_personal$PersonalField7),-tempA, -PersonalField16,-PersonalField17, -PersonalField18, -PersonalField19]
train_df_personal <- df_personal[!is.na(df_personal$PersonalField7),c(-tempA, -PersonalField16,-PersonalField17, -PersonalField18, -PersonalField19)]
train_df_personal <- select(train_df_personal, -tempA, -PersonalField16,-PersonalField17, -PersonalField18, -PersonalField19)
train_df_personal <- df_personal[!is.na(df_personal$PersonalField7),]
train_df_personal <- select(train_df_personal, -tempA, -PersonalField16,-PersonalField17, -PersonalField18, -PersonalField19)
train_df_personal <- df_personal[!is.na(df_personal$PersonalField7),]
colnames(train_df_personal)
train_df_personal <- df_personal[!is.na(df_personal$PersonalField7),]
train_df_personal <- select(train_df_personal, -tempA, -PersonalField16,-PersonalField17, -PersonalField18, -PersonalField19)
colnames(train_df_personal)
rf_fit <- randomForest(as.factor(PersonalField7)~., train_df_personal, ntrees=1000)
test_df_personal <- df_personal[is.na(df_personal$PersonalField7),]
predict(rf_fit, test_df_personal)
anyNA(train_df_personal)
rf_fit <- randomForest(as.factor(PersonalField7)~., train_df_personal, ntrees=1000)
str(train_df_personal)
rf_fit <- randomForest(as.factor(PersonalField7)~., train_df_personal, ntrees=1000)
traceback()
glm_fit <- glm(as.factor(PersonalField7)~., train_df_personal)
glm_fit <- glm(as.factor(PersonalField7)~., train_df_personal, family=binomial("logit"))
glm_fit
predict(glm_fit, test_df_personal)
rf_fit <- train(as.factor(PersonalField7)~., train_df_personal, method = "rpart")
